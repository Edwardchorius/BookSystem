@using BookSystem.Extensions
@model PaginatedList<Book>



@{
    ViewData["Title"] = "Index";
}

<h2>Personal Added Books</h2>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Search by keyword/s: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
            <a asp-action="Index">Reset Collection</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["GenreSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Genre</a>
            </th>
            <th>
                Title
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date Added</a>
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @item.Genre
                </td>
                <td>
                    @item.Title
                </td>
                <td>
                    @item.CreatedOn
                </td>
                <td>
                    <a asp-controller="Book" asp-action="MakeReview" asp-route-bookId="@item.Id" class="btn btn-success">Add Review</a>
                </td>
                <td>
                    <a asp-controller="Book" asp-action="LikeBook" asp-route-bookId="@item.Id" id="like-button" class="btn btn-success">Like Book</a>                    
                </td>
            </tr>
        }       
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div>
    @if (Model.Count < 1)
    {

    }
    else
    {
        <p>
            Page: @(Model.PageIndex)of @Model.TotalPages
        </p>
    }
</div>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

@section Scripts{
    <script src="~/js/likebook.js"></script>
}
